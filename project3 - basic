import ccxt
from datetime import datetime, timedelta
import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.subplots as ms

binance = ccxt.binance()
btc = binance.fetch_ohlcv(symbol="BTC/USDT", timeframe="1h", limit=1000)
data = pd.DataFrame(btc, columns=['datetime', 'open', 'high', 'low', 'close', 'volume'])
data['datetime'] = pd.to_datetime(data['datetime'], unit='ms')
data.set_index('datetime', inplace=True)

btc_ohlcv = binance.fetch_ohlcv(symbol="BTC/USDT", timeframe="1h", limit=101)
com = pd.DataFrame(btc_ohlcv, columns=['datetime', 'open', 'high', 'low', 'close', 'volume'])
com['datetime'] = pd.to_datetime(com['datetime'], unit='ms')
com.set_index('datetime', inplace=True)
close = com['close']
close = close[:100]

base = (close - np.min(close)) / (np.max(close) - np.min(close))
w = len(base)
move = len(data) - w - 101
sim = []
for i in range(move):
    t = data.iloc[i:i+w]['close']
    base2 = (t - np.min(t)) / (np.max(t) - np.min(t))
    a = np.dot(base, base2) / (np.sqrt(np.dot(base, base)) * np.sqrt(np.dot(base2, base2)))
    sim.append(a)

ser = pd.Series(sim).sort_values(ascending=False).head(5)
i = ser.index[1]
name = "정확도 예상 : " + str(round((ser.iloc[1]*100),3)) + "%"
chart = data.iloc[i:i+200]
ta = []
gap = com.iloc[-2]['close']/chart.iloc[100]['open']
chart = chart * gap
chart['volume'] = chart['volume'] / gap

def get_chart(c):
    ta[0:100] = com[c]
    ta[100:] = chart.iloc[100:][c]
    chart[c] = ta
    return chart

get_chart("close")
get_chart("open")
get_chart("high")
get_chart("low")
get_chart("volume")

df = chart
df = df[25:]

candle = go.Candlestick(open=df['open'], high=df['high'], low=df['low'], close=df['close'], increasing_line_color = 'green', decreasing_line_color = 'red', showlegend=False)
volume = go.Bar(y=df['volume'], marker_color='red', name='volume', showlegend=False)
fig = ms.make_subplots(rows=4, cols=1, specs=[[{'rowspan': 3}], [None],[None],[{}]], shared_xaxes=True, horizontal_spacing=0.03, vertical_spacing=0.01)
fig.add_trace(candle, row=1, col=1)
fig.add_trace(volume, row=4, col=1)
fig.update_layout(shapes=[dict(x0=75, x1=75, y0=0, y1=1, xref='x',yref='paper',line_width=1)],annotations=[dict(x=22,y=1,xref='x',yref='paper',font=dict(color="black",size=11),showarrow=False,xanchor='left',text=str(name))])
fig.update_layout(autosize=True, xaxis1_rangeslider_visible=False, xaxis2_rangeslider_visible=False, margin=dict(l=50, r=50, t=50, b=50), template='seaborn', title='BTC in next 100 hours - HongSeunguk')
fig.update_xaxes(zeroline=True, zerolinewidth=1, zerolinecolor='black', showgrid=True, gridwidth=2, gridcolor='lightgray', showline=True, linewidth=2, linecolor='black', mirror=True)
fig.update_yaxes(zeroline=True, zerolinewidth=1, zerolinecolor='black', showgrid=True, gridwidth=2, gridcolor='lightgray', showline=True, linewidth=2, linecolor='black', mirror=True)
fig.show()
